shiny::runApp('Shiny/omics-app/Application')
shiny::runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
install.packages('readr')
library(readr)
library("readr", lib.loc="~/R/win-library/3.5")
shiny::runApp('Shiny/omics-app/Application')
library(ggplot2)
library(shinydashboard)
install.packages('ggplot2')
library(ggplot2)
install.packages('shinydashboard')
install.packages("shinydashboard")
install.packages("shiny")
install.packages("plotly")
install.packages("DT")
install.packages("stringr")
install.packages("mzR")
setRepositories()
install.packages("mzR")
install.packages("dplyr")
install.packages("shinyalert")
install.packages("leaflet")
install.packages("leaflet")
install.packages("readr")
library(ggplot2)
library(shinydashboard)
library(shiny)
library(plotly)
library(DT)
library(stringr)
library(mzR)
library(dplyr)
library(shinyalert)
library(leaflet)
library(splitstackshape)
library(readr)
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
?cSplit
runApp('Shiny/omics-app/Application')
shiny::runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
print(paste("http://pgb.liv.ac.uk/~andrew/crowdsource-server/src/public_html/?page=results&job=","17"))
?paste
print(paste("http://pgb.liv.ac.uk/~andrew/crowdsource-server/src/public_html/?page=results&job","17",sep = "="))
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
ip <- as.data.frame(installed.packages())
head(ip)
ip <- subset(ip, !grepl("MRO", ip$LibPath))
ip <- ip[!(ip[,"Priority"] %in% c("base", "recommended")),]
path.lib <- unique(ip$LibPath)
pkgs.to.remove <- ip[,1]
head(pkgs.to.remove)
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
help(.libPaths)
install.packages('ggplot2')
library(ggplot2)
install.packages('ggplot2')
install.packages('shiny')
installed.packages('shinydashboard')
installed.packages('shinydashboard')
library(shinydashboard)
installed.packages('shinydashboard')
install.packages('shinydashboard')
install.packages('plotly')
install.packages('DT')
install.packages('stringr')
setRepositories()
install.packages('mzR')
library(dplyr)
install.packages('shinyalert')
install.packages('leaflet')
chooseCRANmirror()
install.packages('splitstackshape')
install.packages('readr')
library(ggplot2)
library(shiny)
library(shinydashboard)
library(plotly)
library(DT)
library(stringr)
library(mzR)
library(dplyr)
library(shinyalert)
library(leaflet)
library(splitstackshape)
library(readr)
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
?head
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
shiny::runApp('Shiny/omics-app/Application')
shiny::runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
a <- "boo"
length(a)
nchar(a)
ifelse(nchar(a)>0,TRUE),FALSE)
ifelse(nchar(a)>0,TRUE,FALSE)
a <- ""
ifelse(nchar(a)>0,TRUE,FALSE)
runApp('Shiny/omics-app/Application')
library(plotly)
p <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length,
marker = list(size = 10,
color = 'rgba(255, 182, 193, .9)',
line = list(color = 'rgba(152, 0, 0, .8)',
width = 2))) %>%
layout(title = 'Styled Scatter',
yaxis = list(zeroline = FALSE),
xaxis = list(zeroline = FALSE))
p
shiny::runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
runApp('Shiny/omics-app/Application')
shiny::runApp('Shiny/omics-app/Application')
setwd("~/Shiny/omics-app/Application")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?file.remove
runApp()
